@using DataExportImport.Models
@model DataExportImport.Models.Customer


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <body background="~/images/carbackground.jpg" style="margin-top:-50px;">
        <div class="form-horizontal">
            <h1 style="color:white;text-align:center;">Welcome to Hackathon 2020</h1>

            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.ID)
            <fieldset style="margin-top:-15px;">
                <h4 style="color:white;">Add Customer Details</h4>
                <div class="col-sm-6" style="color:white;">
                    <div class="form-group">
                        @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control", id = "txtFN", placeholder = "First name" } })
                            @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control", id = "txtLN", placeholder = "Last name" } })
                            @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.SSN, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.SSN, new { htmlAttributes = new { @class = "form-control", id = "txtSSN", placeholder = "SSN" } })
                            @Html.ValidationMessageFor(model => model.SSN, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Mobile, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Mobile, new { htmlAttributes = new { @class = "form-control", id = "txtMobile", placeholder = "Mobile Number" } })
                            @Html.ValidationMessageFor(model => model.Mobile, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", id = "txtEmail", placeholder = "Email" } })
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10" style="color:black;">
                            @Html.DropDownListFor(model => model.Gender,
                                          new SelectList(Enum.GetValues(typeof(Gender))),
                                          "Select Gender", new { htmlAttributes = new { @class = "form-control", id = "txtGender" } })
                            @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                        </div>

                    </div>
                </div>
                <div class="col-sm-6" style="color:white;">
                    <div class="form-group">
                        @Html.LabelFor(model => model.AddressLine1, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.AddressLine1, new { htmlAttributes = new { @class = "form-control", id = "txtAddressLine1", placeholder = "Address Line1" } })
                            @Html.ValidationMessageFor(model => model.AddressLine1, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.AddressLine2, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.AddressLine2, new { htmlAttributes = new { @class = "form-control", id = "txtAddressLine2", placeholder = "Address Line2" } })
                            @Html.ValidationMessageFor(model => model.AddressLine2, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control", id = "txtCity", placeholder = "City" } })
                            @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.State, new { htmlAttributes = new { @class = "form-control", id = "txtState", placeholder = "State" } })
                            @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ZipCode, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.ZipCode, new { htmlAttributes = new { @class = "form-control", id = "txtZipCode", placeholder = "Zip Code" } })
                            @Html.ValidationMessageFor(model => model.ZipCode, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

            </fieldset>


            @*<table style="width: 100%;">
                    <tr>
                        <td>Table Heading</td>
                        <td>
                            Data 1
                        </td>
                        <td>Data 2</td>
                    </tr>
                    <tr>
                        <td>&nbsp;</td>
                        <td>&nbsp;</td>
                        <td>&nbsp;</td>
                    </tr>
                    <tr>
                        <td>&nbsp;</td>
                        <td>&nbsp;</td>
                        <td>&nbsp;</td>
                    </tr>
                </table>*@
            @*<div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="button" value="Add Owned Car" id="btnOwnedCar" class="btn btn-default" onclick="showAddVehicle()" />
                    </div>
                </div>*@

            <div id="divOwnedVehicle">
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10" style="padding-left: 262px;">
                    <input type="submit" value="Create Customer" id="btnCreate" class="btn btn-default" />
                </div>
            </div>
        </div>
    </body>
}



@using (Html.BeginForm("Import", "Home", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    <div>
        <input type="button" value="Export" id="btnExport" class="btn btn-default" onclick="exportDetails()" />
    </div>
    <br />
    <h2 style="color:white;">Import Data</h2>
    <div class="form-group" style="color:white;display: inline-flex;">
        @Html.TextBox("file", "", new { type = "file", style = "width:194px" })
        <input type="submit" value="Import" class="btn btn-default" />
        @ViewBag.Message
    </div>
}



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<script language="javascript" type="text/javascript">

    function showAddVehicle() {
        $("#btnOwnedCar").click(function () {
            $('#divOwnedVehicle').load("/Home/CustomerOwnedVehicle");
        });
    };

    function exportDetails() {
        var customer = {
            FirstName: $('#txtFN').val(),
            LastName: $('#txtLN').val(),
            SSN: 'MR1234567',
            Mobile: $('#txtMobile').val(),
            Email: $('#txtEmail').val(),
            Gender: $('#txtGender').val(),
            AddressLine1: $('#txtAddressLine1').val(),
            AddressLine2: $('#txtAddressLine2').val(),
            City: $('#txtCity').val(),
            State: $('#txtState').val(),
            ZipCode: $('#txtZipCode').val(),
        }
        $.ajax({
            type: 'POST',
            url: "/Home/Export",
            data: JSON.stringify(customer),
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                alert("Exported Successfully");
            },
            error: function () {
                alert("Error!")
            }
        });
    };
</script>
